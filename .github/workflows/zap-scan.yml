name: "OWASP ZAP Scan (Stable for Push & Manual)"

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clone repository manual (tanpa actions/checkout)
      - name: Checkout repository
        run: git clone https://github.com/${{ github.repository }} ./

      # 2Ô∏è‚É£ Setup Node.js dan environment (tanpa install docker)
      - name: Setup environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm curl

      # 3Ô∏è‚É£ Install dependencies project
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Jalankan app Next.js di background
      - name: Start app
        run: npm run dev &
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "pk_test_fakekey"
          CLERK_SECRET_KEY: "sk_test_fakekey"

      # 5Ô∏è‚É£ Tunggu server benar-benar hidup
      - name: Wait until app is reachable (robust)
        run: |
          echo "üöÄ Checking if server starts..."
          for i in {1..60}; do
            STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" http://localhost:3000 || true)
            if [ "$STATUS" = "200" ]; then
              echo "‚úÖ App is up (HTTP 200)!"
              break
            else
              echo "‚è≥ ($i) Server not ready yet (status: $STATUS)"
              ps aux | grep "next" || true
              sleep 5
            fi
          done

      # 6Ô∏è‚É£ Tambah jeda ekstra biar stabil
      - name: Extra wait before ZAP
        run: |
          echo "üïí Giving app extra time to stabilize..."
          sleep 20

      # 7Ô∏è‚É£ Jalankan OWASP ZAP scan dan simpan hasil di workspace
      - name: Run ZAP baseline scan
        run: |
          echo "‚ö° Running OWASP ZAP Baseline Scan..."
          docker run --rm --network="host" \
            -v "${{ github.workspace }}":/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t http://localhost:3000 \
              -a \
              -r /zap/wrk/zap_report.html \
              -J /zap/wrk/zap_report.json \
              -w /zap/wrk/zap_warnings.md || true

      # 8Ô∏è‚É£ Debug: tampilkan file hasil
      - name: List generated reports
        run: |
          echo "üìÑ Files generated in workspace:"
          ls -lah ${{ github.workspace }}

      # 9Ô∏è‚É£ Upload hasil laporan sebagai artifact
      - name: Upload ZAP report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.html
            zap_report.json
            zap_warnings.md
